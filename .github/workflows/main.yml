name: Java CI with Gradle

on:
  push:
    branches: [ dev-be ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./SERVER/src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DB_ENDPOINT }}
          spring.datasource.username: admin
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.security.oauth2.client.registration.google.clientId: ${{ secrets.CLIENT_ID }}
          spring.security.oauth2.client.registration.google.clientSecret: ${{ secrets.CLIENT_SECRET }}
          mail.address.admin: ${{ secrets.ADMIN_MAIL }}
          jwt.key: ${{ secrets.JWT_SECRET_KEY }}

      - name: Build with Gradle
        run: |
          cd SERVER
          chmod +x gradlew
          ./gradlew build
          cd ..

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t main-pro . 
          docker tag main-pro newbee9507/main-pro:${GITHUB_SHA::7}
          docker push newbee9507/main-pro:${GITHUB_SHA::7}
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Start Session Manager session
        run: aws ssm start-session --target i-07ef398b3b1fe470a

      - name: Deploy to Server
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ap-northeast-2
        run: |
          aws ssm send-command \
            --instance-ids i-07ef398b3b1fe470a \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull newbee9507/main-pro:${GITHUB_SHA::7}',
              'sudo docker tag newbee9507/main-pro:${GITHUB_SHA::7} main-pro',
              'sudo docker run -d --name server -p 8080:8080 main-pro'
            ]" \
            --output text